"""
    This code was generated by
    ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __
    |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\ | |___ |__/ |__|  | |  | |__/
    |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \| |___ |  \ |  |  | |__| |  \

    Twilio - Serverless
    This is the public Twilio REST API.

    NOTE: This class is auto generated by OpenAPI Generator.
    https://openapi-generator.tech
    Do not edit the class manually.
"""


from twilio.base import deserialize
from twilio.base import serialize
from twilio.base import values
from twilio.base.instance_context import InstanceContext
from twilio.base.instance_resource import InstanceResource
from twilio.base.list_resource import ListResource




class FunctionVersionContentContext(InstanceContext):
    def __init__(self, version: V1, service_sid: str, function_sid: str, sid: str):
        # TODO: needs autogenerated docs
        super().__init__(version)

        # Path Solution
        self._solution = { 'service_sid': service_sid, 'function_sid': function_sid, 'sid': sid,  }
        self._uri = '/Services/${service_sid}/Functions/${function_sid}/Versions/${sid}/Content'
        
    
    def fetch(self):
        
        """
        Fetch the FunctionVersionContentInstance

        :returns: The fetched FunctionVersionContentInstance
        #TODO: add rtype docs
        """
        payload = self._version.fetch(method='GET', uri=self._uri, )
        return FunctionVersionContentInstance(
            self._version,
            payload,
            service_sidfunction_sidsid=self._solution['service_sid''function_sid''sid'],
        )
        
        
    

    def __repr__(self):
        """
        Provide a friendly representation
        :returns: Machine friendly representation
        :rtype: str
        """
        return '<Twilio.Api.V1.FunctionVersionContentContext>'



class FunctionVersionContentInstance(InstanceResource):
    def __init__(self, version, payload, service_sid: str, function_sid: str, sid: str):
        super().__init__(version)
        self._properties = { 
            'sid' : payload.get('sid'),
            'account_sid' : payload.get('account_sid'),
            'service_sid' : payload.get('service_sid'),
            'function_sid' : payload.get('function_sid'),
            'content' : payload.get('content'),
            'url' : payload.get('url'),
        }

        self._context = None
        self._solution = {
            'service_sid': service_sid or self._properties['service_sid']'function_sid': function_sid or self._properties['function_sid']'sid': sid or self._properties['sid']
        }

    @property
    def _proxy(self):
        if self._context is None:
            self._context = FunctionVersionContentContext(
                self._version,
                service_sid=self._solution['service_sid'],function_sid=self._solution['function_sid'],sid=self._solution['sid'],
            )
        return self._context

    

    def __repr__(self):
        """
        Provide a friendly representation
        :returns: Machine friendly representation
        :rtype: str
        """
        context = ' '.join('{}={}'.format(k, v) for k, v in self._solution.items())
        return '<Twilio.Api.V1.FunctionVersionContentInstance {}>'.format(context)



class FunctionVersionContentListInstance(ListResource):
    def __init__(self, version: V1, service_sid: str, function_sid: str, sid: str):
        # TODO: needs autogenerated docs
        super().__init__(version)

        # Path Solution
        self._solution = { 'service_sid': service_sid, 'function_sid': function_sid, 'sid': sid,  }
        self._uri = ''
        
    

    def __repr__(self):
        """
        Provide a friendly representation
        :returns: Machine friendly representation
        :rtype: str
        """
        return '<Twilio.Api.V1.FunctionVersionContentListInstance>'

