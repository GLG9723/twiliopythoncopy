"""
    This code was generated by
   ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __
    |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\ | |___ |__/ |__|  | |  | |__/
    |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \| |___ |  \ |  |  | |__| |  \

    Twilio - Verify
    This is the public Twilio REST API.

    NOTE: This class is auto generated by OpenAPI Generator.
    https://openapi-generator.tech
    Do not edit the class manually.
"""


from twilio.base import deserialize
from twilio.base import serialize
from twilio.base import values
from twilio.base.instance_context import InstanceContext
from twilio.base.instance_resource import InstanceResource
from twilio.base.list_resource import ListResource
from twilio.base.version import Version



class VerificationCheckList(ListResource):

    def __init__(self, version: Version, service_sid: str):
        """
        Initialize the VerificationCheckList

        :param Version version: Version that contains the resource
        :param service_sid: The SID of the verification [Service](https://www.twilio.com/docs/verify/api/service) to create the resource under.
        
        :returns: twilio.rest.verify.v2.service.verification_check.VerificationCheckList
        :rtype: twilio.rest.verify.v2.service.verification_check.VerificationCheckList
        """
        super().__init__(version)

        # Path Solution
        self._solution = { 'service_sid': service_sid,  }
        self._uri = '/Services/${service_sid}/VerificationCheck'.format(**self._solution)
        
        
    
    def create(self, code=values.unset, to=values.unset, verification_sid=values.unset, amount=values.unset, payee=values.unset):
        """
        Create the VerificationCheckInstance
        :param str code: The 4-10 character string being verified.
        :param str to: The phone number or [email](https://www.twilio.com/docs/verify/email) to verify. Either this parameter or the `verification_sid` must be specified. Phone numbers must be in [E.164 format](https://www.twilio.com/docs/glossary/what-e164).
        :param str verification_sid: A SID that uniquely identifies the Verification Check. Either this parameter or the `to` phone number/[email](https://www.twilio.com/docs/verify/email) must be specified.
        :param str amount: The amount of the associated PSD2 compliant transaction. Requires the PSD2 Service flag enabled.
        :param str payee: The payee of the associated PSD2 compliant transaction. Requires the PSD2 Service flag enabled.
        
        :returns: The created VerificationCheckInstance
        :rtype: twilio.rest.verify.v2.service.verification_check.VerificationCheckInstance
        """
        data = values.of({ 
            'Code': code,
            'To': to,
            'VerificationSid': verification_sid,
            'Amount': amount,
            'Payee': payee,
        })

        payload = self._version.create(method='POST', uri=self._uri, data=data)
        return VerificationCheckInstance(self._version, payload, service_sid=self._solution['service_sid'])
    


    def __repr__(self):
        """
        Provide a friendly representation
        :returns: Machine friendly representation
        :rtype: str
        """
        return '<Twilio.Verify.V2.VerificationCheckList>'



class VerificationCheckInstance(InstanceResource):
    def __init__(self, version, payload, service_sid: str):
        super().__init__(version)
        self._properties = { 
            'sid' : payload.get('sid'),
            'service_sid' : payload.get('service_sid'),
            'account_sid' : payload.get('account_sid'),
            'to' : payload.get('to'),
            'channel' : payload.get('channel'),
            'status' : payload.get('status'),
            'valid' : payload.get('valid'),
            'amount' : payload.get('amount'),
            'payee' : payload.get('payee'),
            'date_created' : payload.get('date_created'),
            'date_updated' : payload.get('date_updated'),
            'sna_attempts_error_codes' : payload.get('sna_attempts_error_codes'),
        }

        self._context = None
        self._solution = {
            'service_sid': service_sid or self._properties['service_sid'],
        }

    @property
    def _proxy(self):
        if self._context is None:
            self._context = VerificationCheckContext(
                self._version,
                service_sid=self._solution['service_sid'],
            )
        return self._context

    

    def __repr__(self):
        """
        Provide a friendly representation
        :returns: Machine friendly representation
        :rtype: str
        """
        context = ' '.join('{}={}'.format(k, v) for k, v in self._solution.items())
        return '<Twilio.Verify.V2.VerificationCheckInstance {}>'.format(context)



