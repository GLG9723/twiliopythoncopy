"""
    This code was generated by
    ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __
    |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\ | |___ |__/ |__|  | |  | |__/
    |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \| |___ |  \ |  |  | |__| |  \

    Twilio - Verify
    This is the public Twilio REST API.

    NOTE: This class is auto generated by OpenAPI Generator.
    https://openapi-generator.tech
    Do not edit the class manually.
"""


from twilio.base import deserialize
from twilio.base import serialize
from twilio.base import values
from twilio.base.instance_context import InstanceContext
from twilio.base.instance_resource import InstanceResource
from twilio.base.list_resource import ListResource

from twilio.base.page import Page




class VerificationAttemptContext(InstanceContext):
    def __init__(self, version: V2, sid: str):
        # TODO: needs autogenerated docs
        super().__init__(version)

        # Path Solution
        self._solution = { 'sid': sid,  }
        self._uri = '/Attempts/${sid}'
        
    
    def fetch(self):
        
        """
        Fetch the VerificationAttemptInstance

        :returns: The fetched VerificationAttemptInstance
        #TODO: add rtype docs
        """
        payload = self._version.fetch(method='GET', uri=self._uri, )
        return VerificationAttemptInstance(
            self._version,
            payload,
            sid=self._solution['sid'],
        )
        
        
    

    def __repr__(self):
        """
        Provide a friendly representation
        :returns: Machine friendly representation
        :rtype: str
        """
        return '<Twilio.Api.V2.VerificationAttemptContext>'



class VerificationAttemptInstance(InstanceResource):
    def __init__(self, version, payload, sid: str):
        super().__init__(version)
        self._properties = { 
            'sid' : payload.get('sid'),
            'account_sid' : payload.get('account_sid'),
            'service_sid' : payload.get('service_sid'),
            'verification_sid' : payload.get('verification_sid'),
            'date_created' : payload.get('date_created'),
            'date_updated' : payload.get('date_updated'),
            'conversion_status' : payload.get('conversion_status'),
            'channel' : payload.get('channel'),
            'price' : payload.get('price'),
            'channel_data' : payload.get('channel_data'),
            'url' : payload.get('url'),
        }

        self._context = None
        self._solution = {
            'sid': sid or self._properties['sid']
        }

    @property
    def _proxy(self):
        if self._context is None:
            self._context = VerificationAttemptContext(
                self._version,
                sid=self._solution['sid'],
            )
        return self._context

    

    def __repr__(self):
        """
        Provide a friendly representation
        :returns: Machine friendly representation
        :rtype: str
        """
        context = ' '.join('{}={}'.format(k, v) for k, v in self._solution.items())
        return '<Twilio.Api.V2.VerificationAttemptInstance {}>'.format(context)



class VerificationAttemptListInstance(ListResource):
    def __init__(self, version: V2):
        # TODO: needs autogenerated docs
        super().__init__(version)

        # Path Solution
        self._solution = {  }
        self._uri = '/Attempts'
        
    
    def page(self, date_created_after, date_created_before, channel_data_to, country, channel, verify_service_sid, verification_sid, status, page_size):
        
        data = values.of({
            'date_created_after': date_created_after,'date_created_before': date_created_before,'channel_data_to': channel_data_to,'country': country,'channel': channel,'verify_service_sid': verify_service_sid,'verification_sid': verification_sid,'status': status,'page_size': page_size,
        })

        payload = self._version.create(method='get', uri=self._uri, data=data, )

        return VerificationAttemptPage(self._version, payload, )
    

    def __repr__(self):
        """
        Provide a friendly representation
        :returns: Machine friendly representation
        :rtype: str
        """
        return '<Twilio.Api.V2.VerificationAttemptListInstance>'

