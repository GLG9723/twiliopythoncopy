"""
    This code was generated by
    ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __
    |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\ | |___ |__/ |__|  | |  | |__/
    |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \| |___ |  \ |  |  | |__| |  \

    Twilio - Messaging
    This is the public Twilio REST API.

    NOTE: This class is auto generated by OpenAPI Generator.
    https://openapi-generator.tech
    Do not edit the class manually.
"""


from twilio.base import deserialize
from twilio.base import serialize
from twilio.base import values
from twilio.base.instance_context import InstanceContext
from twilio.base.instance_resource import InstanceResource
from twilio.base.list_resource import ListResource

from twilio.base.page import Page




class UsAppToPersonContext(InstanceContext):
    def __init__(self, version: V1, messaging_service_sid: str, sid: str):
        # TODO: needs autogenerated docs
        super().__init__(version)

        # Path Solution
        self._solution = { 'messaging_service_sid': messaging_service_sid, 'sid': sid,  }
        self._uri = '/Services/${messaging_service_sid}/Compliance/Usa2p/${sid}'
        
    
    def delete(self):
        
        
        """
        Deletes the UsAppToPersonInstance

        :returns: True if delete succeeds, False otherwise
        :rtype: bool
        """
        return self._version.delete(method='DELETE', uri=self._uri, )
    
    def fetch(self):
        
        """
        Fetch the UsAppToPersonInstance

        :returns: The fetched UsAppToPersonInstance
        #TODO: add rtype docs
        """
        payload = self._version.fetch(method='GET', uri=self._uri, )
        return UsAppToPersonInstance(
            self._version,
            payload,
            messaging_service_sidsid=self._solution['messaging_service_sid''sid'],
        )
        
        
    

    def __repr__(self):
        """
        Provide a friendly representation
        :returns: Machine friendly representation
        :rtype: str
        """
        return '<Twilio.Api.V1.UsAppToPersonContext>'



class UsAppToPersonInstance(InstanceResource):
    def __init__(self, version, payload, messaging_service_sid: str, sid: str):
        super().__init__(version)
        self._properties = { 
            'sid' : payload.get('sid'),
            'account_sid' : payload.get('account_sid'),
            'brand_registration_sid' : payload.get('brand_registration_sid'),
            'messaging_service_sid' : payload.get('messaging_service_sid'),
            'description' : payload.get('description'),
            'message_samples' : payload.get('message_samples'),
            'us_app_to_person_usecase' : payload.get('us_app_to_person_usecase'),
            'has_embedded_links' : payload.get('has_embedded_links'),
            'has_embedded_phone' : payload.get('has_embedded_phone'),
            'campaign_status' : payload.get('campaign_status'),
            'campaign_id' : payload.get('campaign_id'),
            'is_externally_registered' : payload.get('is_externally_registered'),
            'rate_limits' : payload.get('rate_limits'),
            'message_flow' : payload.get('message_flow'),
            'opt_in_message' : payload.get('opt_in_message'),
            'opt_out_message' : payload.get('opt_out_message'),
            'help_message' : payload.get('help_message'),
            'opt_in_keywords' : payload.get('opt_in_keywords'),
            'opt_out_keywords' : payload.get('opt_out_keywords'),
            'help_keywords' : payload.get('help_keywords'),
            'date_created' : payload.get('date_created'),
            'date_updated' : payload.get('date_updated'),
            'url' : payload.get('url'),
            'mock' : payload.get('mock'),
        }

        self._context = None
        self._solution = {
            'messaging_service_sid': messaging_service_sid or self._properties['messaging_service_sid']'sid': sid or self._properties['sid']
        }

    @property
    def _proxy(self):
        if self._context is None:
            self._context = UsAppToPersonContext(
                self._version,
                messaging_service_sid=self._solution['messaging_service_sid'],sid=self._solution['sid'],
            )
        return self._context

    

    def __repr__(self):
        """
        Provide a friendly representation
        :returns: Machine friendly representation
        :rtype: str
        """
        context = ' '.join('{}={}'.format(k, v) for k, v in self._solution.items())
        return '<Twilio.Api.V1.UsAppToPersonInstance {}>'.format(context)



class UsAppToPersonListInstance(ListResource):
    def __init__(self, version: V1, messaging_service_sid: str):
        # TODO: needs autogenerated docs
        super().__init__(version)

        # Path Solution
        self._solution = { 'messaging_service_sid': messaging_service_sid,  }
        self._uri = '/Services/${messaging_service_sid}/Compliance/Usa2p'
        
    
    def create(self, body):
        data = values.of({
            'body': body,
        })

        payload = self._version.create(method='post', uri=self._uri, data=data, )

        return UsAppToPersonInstance(self._version, payload, messaging_service_sid=self._solution['messaging_service_sid'])
        
    
    def page(self, page_size):
        
        data = values.of({
            'page_size': page_size,
        })

        payload = self._version.create(method='get', uri=self._uri, data=data, )

        return UsAppToPersonPage(self._version, payload, messaging_service_sid=self._solution['messaging_service_sid'], )
    

    def __repr__(self):
        """
        Provide a friendly representation
        :returns: Machine friendly representation
        :rtype: str
        """
        return '<Twilio.Api.V1.UsAppToPersonListInstance>'

