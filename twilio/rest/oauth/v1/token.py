"""
    This code was generated by
    ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __
    |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\ | |___ |__/ |__|  | |  | |__/
    |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \| |___ |  \ |  |  | |__| |  \

    Twilio - Oauth
    This is the public Twilio REST API.

    NOTE: This class is auto generated by OpenAPI Generator.
    https://openapi-generator.tech
    Do not edit the class manually.
"""


from twilio.base import deserialize
from twilio.base import serialize
from twilio.base import values
from twilio.base.instance_context import InstanceContext
from twilio.base.instance_resource import InstanceResource
from twilio.base.list_resource import ListResource





class TokenInstance(InstanceResource):
    def __init__(self, version, payload):
        super(TokenInstance, self).__init__(version)
        self._properties = { 
            'access_token' = payload.get('access_token'),
            'refresh_token' = payload.get('refresh_token'),
            'id_token' = payload.get('id_token'),
            'refresh_token_expires_at' = payload.get('refresh_token_expires_at'),
            'access_token_expires_at' = payload.get('access_token_expires_at'),
        }

        self._context = None
        self._solution = {
            
        }

    @property
    def _proxy(self):
        if self._context is None:
            self._context = TokenContext(
                self._version,
                
            )
        return self._context

    

    def __repr__(self):
        """
        Provide a friendly representation
        :returns: Machine friendly representation
        :rtype: str
        """
        context = ' '.join('{}={}'.format(k, v) for k, v in self._solution.items())
        return '<Twilio.Api.V1.TokenInstance {}>'.format(context)



class TokenListInstance(ListResource):
    def __init__(self, version: V1):
        # TODO: needs autogenerated docs
        super(TokenListInstanceList, self).__init__(version)

        # Path Solution
        self._solution = {  }
        self._uri = '/token'
        
        
        def create(self, body):
            data = values.of({
                'body': body,
            })

            payload = self._version.create(method='post', uri=self._uri, data=data, )

            return TokenInstance(self._version, payload, )
            
        

    def __repr__(self):
        """
        Provide a friendly representation
        :returns: Machine friendly representation
        :rtype: str
        """
        return '<Twilio.Api.V1.TokenListInstance>'

