r"""
    This code was generated by
   ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __
    |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\ | |___ |__/ |__|  | |  | |__/
    |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \| |___ |  \ |  |  | |__| |  \

    Twilio - Autopilot
    This is the public Twilio REST API.

    NOTE: This class is auto generated by OpenAPI Generator.
    https://openapi-generator.tech
    Do not edit the class manually.
"""


from datetime import datetime
from typing import Optional
from twilio.base import deserialize, values

from twilio.base.instance_resource import InstanceResource
from twilio.base.list_resource import ListResource
from twilio.base.version import Version


class RestoreAssistantInstance(InstanceResource):
    def __init__(self, version, payload):
        """
        Initialize the RestoreAssistantInstance
        """
        super().__init__(version)

        self._account_sid: Optional[str] = payload.get("account_sid")
        self._sid: Optional[str] = payload.get("sid")
        self._date_created: Optional[datetime] = deserialize.iso8601_datetime(
            payload.get("date_created")
        )
        self._date_updated: Optional[datetime] = deserialize.iso8601_datetime(
            payload.get("date_updated")
        )
        self._unique_name: Optional[str] = payload.get("unique_name")
        self._friendly_name: Optional[str] = payload.get("friendly_name")
        self._needs_model_build: Optional[bool] = payload.get("needs_model_build")
        self._latest_model_build_sid: Optional[str] = payload.get(
            "latest_model_build_sid"
        )
        self._log_queries: Optional[bool] = payload.get("log_queries")
        self._development_stage: Optional[str] = payload.get("development_stage")
        self._callback_url: Optional[str] = payload.get("callback_url")
        self._callback_events: Optional[str] = payload.get("callback_events")

        self._solution = {}

    @property
    def account_sid(self) -> Optional[str]:
        """
        :returns: The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Assistant resource.
        """
        return self._account_sid

    @property
    def sid(self) -> Optional[str]:
        """
        :returns: The unique string that we created to identify the Assistant resource.
        """
        return self._sid

    @property
    def date_created(self) -> Optional[datetime]:
        """
        :returns: The date and time in GMT when the resource was created specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.
        """
        return self._date_created

    @property
    def date_updated(self) -> Optional[datetime]:
        """
        :returns: The date and time in GMT when the resource was last updated specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.
        """
        return self._date_updated

    @property
    def unique_name(self) -> Optional[str]:
        """
        :returns: An application-defined string that uniquely identifies the resource. It can be used in place of the resource's `sid` in the URL to address the resource.
        """
        return self._unique_name

    @property
    def friendly_name(self) -> Optional[str]:
        """
        :returns: The string that you assigned to describe the resource. It is not unique and can be up to 255 characters long.
        """
        return self._friendly_name

    @property
    def needs_model_build(self) -> Optional[bool]:
        """
        :returns: Whether model needs to be rebuilt.
        """
        return self._needs_model_build

    @property
    def latest_model_build_sid(self) -> Optional[str]:
        """
        :returns: Reserved.
        """
        return self._latest_model_build_sid

    @property
    def log_queries(self) -> Optional[bool]:
        """
        :returns: Whether queries should be logged and kept after training. Can be: `true` or `false` and defaults to `true`. If `true`, queries are stored for 30 days, and then deleted. If `false`, no queries are stored.
        """
        return self._log_queries

    @property
    def development_stage(self) -> Optional[str]:
        """
        :returns: A string describing the state of the assistant.
        """
        return self._development_stage

    @property
    def callback_url(self) -> Optional[str]:
        """
        :returns: Reserved.
        """
        return self._callback_url

    @property
    def callback_events(self) -> Optional[str]:
        """
        :returns: Reserved.
        """
        return self._callback_events

    def __repr__(self) -> str:
        """
        Provide a friendly representation

        :returns: Machine friendly representation
        """
        context = " ".join("{}={}".format(k, v) for k, v in self._solution.items())
        return "<Twilio.Autopilot.V1.RestoreAssistantInstance {}>".format(context)


class RestoreAssistantList(ListResource):
    def __init__(self, version: Version):
        """
        Initialize the RestoreAssistantList

        :param version: Version that contains the resource

        """
        super().__init__(version)

        self._uri = "/Assistants/Restore"

    def update(self, assistant) -> RestoreAssistantInstance:
        """
        Update the RestoreAssistantInstance

        :param str assistant: The Twilio-provided string that uniquely identifies the Assistant resource to restore.

        :returns: The created RestoreAssistantInstance
        """
        data = values.of(
            {
                "Assistant": assistant,
            }
        )

        payload = self._version.update(
            method="POST",
            uri=self._uri,
            data=data,
        )

        return RestoreAssistantInstance(self._version, payload)

    async def update_async(self, assistant) -> RestoreAssistantInstance:
        """
        Asynchronously update the RestoreAssistantInstance

        :param str assistant: The Twilio-provided string that uniquely identifies the Assistant resource to restore.

        :returns: The created RestoreAssistantInstance
        """
        data = values.of(
            {
                "Assistant": assistant,
            }
        )

        payload = await self._version.update_async(
            method="POST",
            uri=self._uri,
            data=data,
        )

        return RestoreAssistantInstance(self._version, payload)

    def __repr__(self) -> str:
        """
        Provide a friendly representation

        :returns: Machine friendly representation
        """
        return "<Twilio.Autopilot.V1.RestoreAssistantList>"
